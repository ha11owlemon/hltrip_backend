<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hall.DAO.BookingsMapper">
  <resultMap id="BaseResultMap" type="com.hall.Bean.Bookings">
    <id column="bookingId" jdbcType="INTEGER" property="bookingid" />
    <result column="houseId" jdbcType="INTEGER" property="houseid" />
    <result column="sdate" jdbcType="DATE" property="sdate" />
    <result column="edate" jdbcType="DATE" property="edate" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="bstatus" jdbcType="CHAR" property="bstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bookingId, houseId, sdate, edate, userId, bstatus
  </sql>
  <select id="selectByExample" parameterType="com.hall.Bean.BookingsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bookings
    where bookingId = #{bookingid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bookings
    where bookingId = #{bookingid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hall.Bean.BookingsExample">
    delete from bookings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hall.Bean.Bookings">
    insert into bookings (bookingId, houseId, sdate, 
      edate, userId, bstatus)
    values (#{bookingid,jdbcType=INTEGER}, #{houseid,jdbcType=INTEGER}, #{sdate,jdbcType=DATE}, 
      #{edate,jdbcType=DATE}, #{userid,jdbcType=INTEGER}, #{bstatus,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hall.Bean.Bookings">
    insert into bookings
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookingid != null">
        bookingId,
      </if>
      <if test="houseid != null">
        houseId,
      </if>
      <if test="sdate != null">
        sdate,
      </if>
      <if test="edate != null">
        edate,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="bstatus != null">
        bstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookingid != null">
        #{bookingid,jdbcType=INTEGER},
      </if>
      <if test="houseid != null">
        #{houseid,jdbcType=INTEGER},
      </if>
      <if test="sdate != null">
        #{sdate,jdbcType=DATE},
      </if>
      <if test="edate != null">
        #{edate,jdbcType=DATE},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bstatus != null">
        #{bstatus,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hall.Bean.BookingsExample" resultType="java.lang.Long">
    select count(*) from bookings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bookings
    <set>
      <if test="record.bookingid != null">
        bookingId = #{record.bookingid,jdbcType=INTEGER},
      </if>
      <if test="record.houseid != null">
        houseId = #{record.houseid,jdbcType=INTEGER},
      </if>
      <if test="record.sdate != null">
        sdate = #{record.sdate,jdbcType=DATE},
      </if>
      <if test="record.edate != null">
        edate = #{record.edate,jdbcType=DATE},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.bstatus != null">
        bstatus = #{record.bstatus,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bookings
    set bookingId = #{record.bookingid,jdbcType=INTEGER},
      houseId = #{record.houseid,jdbcType=INTEGER},
      sdate = #{record.sdate,jdbcType=DATE},
      edate = #{record.edate,jdbcType=DATE},
      userId = #{record.userid,jdbcType=INTEGER},
      bstatus = #{record.bstatus,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hall.Bean.Bookings">
    update bookings
    <set>
      <if test="houseid != null">
        houseId = #{houseid,jdbcType=INTEGER},
      </if>
      <if test="sdate != null">
        sdate = #{sdate,jdbcType=DATE},
      </if>
      <if test="edate != null">
        edate = #{edate,jdbcType=DATE},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bstatus != null">
        bstatus = #{bstatus,jdbcType=CHAR},
      </if>
    </set>
    where bookingId = #{bookingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hall.Bean.Bookings">
    update bookings
    set houseId = #{houseid,jdbcType=INTEGER},
      sdate = #{sdate,jdbcType=DATE},
      edate = #{edate,jdbcType=DATE},
      userId = #{userid,jdbcType=INTEGER},
      bstatus = #{bstatus,jdbcType=CHAR}
    where bookingId = #{bookingid,jdbcType=INTEGER}
  </update>
</mapper>