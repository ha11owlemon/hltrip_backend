<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hall.DAO.userMapper">
  <resultMap id="BaseResultMap" type="com.hall.Bean.user">
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="phoneNumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="CHAR" property="role" />
    <result column="registrationDate" jdbcType="TIMESTAMP" property="registrationdate" />
    <result column="avatarPic" jdbcType="VARCHAR" property="avatarpic" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="expiredTime" jdbcType="TIMESTAMP" property="expiredtime" />
    <result column="landlordid" jdbcType="INTEGER" property="landlordid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, username, phoneNumber, email, password, role, registrationDate, avatarPic, 
    token, lastLoginTime, expiredTime, landlordid
  </sql>
  <select id="selectByExample" parameterType="com.hall.Bean.userExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hall.Bean.userExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hall.Bean.user">
    insert into users (userId, username, phoneNumber, 
      email, password, role, 
      registrationDate, avatarPic, token, 
      lastLoginTime, expiredTime, landlordid
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=CHAR}, 
      #{registrationdate,jdbcType=TIMESTAMP}, #{avatarpic,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{lastlogintime,jdbcType=TIMESTAMP}, #{expiredtime,jdbcType=TIMESTAMP}, #{landlordid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hall.Bean.user" keyProperty="userid" keyColumn="userId" useGeneratedKeys="true">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="registrationdate != null">
        registrationDate,
      </if>
      <if test="avatarpic != null">
        avatarPic,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="lastlogintime != null">
        lastLoginTime,
      </if>
      <if test="expiredtime != null">
        expiredTime,
      </if>
      <if test="landlordid != null">
        landlordid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=CHAR},
      </if>
      <if test="registrationdate != null">
        #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="avatarpic != null">
        #{avatarpic,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredtime != null">
        #{expiredtime,jdbcType=TIMESTAMP},
      </if>
      <if test="landlordid != null">
        #{landlordid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hall.Bean.userExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=CHAR},
      </if>
      <if test="record.registrationdate != null">
        registrationDate = #{record.registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.avatarpic != null">
        avatarPic = #{record.avatarpic,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.lastlogintime != null">
        lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiredtime != null">
        expiredTime = #{record.expiredtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.landlordid != null">
        landlordid = #{record.landlordid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set userId = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=CHAR},
      registrationDate = #{record.registrationdate,jdbcType=TIMESTAMP},
      avatarPic = #{record.avatarpic,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      expiredTime = #{record.expiredtime,jdbcType=TIMESTAMP},
      landlordid = #{record.landlordid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hall.Bean.user">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="registrationdate != null">
        registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="avatarpic != null">
        avatarPic = #{avatarpic,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredtime != null">
        expiredTime = #{expiredtime,jdbcType=TIMESTAMP},
      </if>
      <if test="landlordid != null">
        landlordid = #{landlordid,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hall.Bean.user">
    update users
    set username = #{username,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=CHAR},
      registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      avatarPic = #{avatarpic,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      expiredTime = #{expiredtime,jdbcType=TIMESTAMP},
      landlordid = #{landlordid,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <select id="selectCountUserByPhonenNumber" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from users where phoneNumber=#{phoneNumber}
  </select>

  <select id="selectUserByPhonenNumber" parameterType="java.lang.String" resultType="com.hall.Bean.user">
    select * from users where phoneNumber=#{phoneNumber}
  </select>

  <update id="updateUserByPhonenNumber" parameterType="com.hall.Bean.user">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="registrationdate != null">
        registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="avatarpic != null">
        avatarPic = #{avatarpic,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredtime != null">
        expiredTime = #{expiredtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where phoneNumber = #{phonenumber}
  </update>

  <select id="loginByPwd" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from users where phoneNumber=#{phoneNumber} and password=#{password}
  </select>

  <update id="updatePwd" parameterType="java.lang.String">
    update users set password=#{password} where phoneNumber=#{phoneNumber}
  </update>

  <select id="queryLoginRecord" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from users where userId=#{userId} and token=#{token}
  </select>

  <select id="getUserprofile" parameterType="java.lang.Integer" resultType="com.hall.Bean.user">
    select username,avatarPic,phoneNumber,role,landlordid from users where userId=#{houseid}
  </select>
</mapper>