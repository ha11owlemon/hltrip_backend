<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hall.DAO.LandlordsMapper">
  <resultMap id="BaseResultMap" type="com.hall.Bean.Landlords">
    <id column="landlordId" jdbcType="INTEGER" property="landlordid" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="phoneNumber" jdbcType="VARCHAR" property="phonenumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    landlordId, nickname, avatar, balance, phoneNumber
  </sql>
  <select id="selectByExample" parameterType="com.hall.Bean.LandlordsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from landlords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from landlords
    where landlordId = #{landlordid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from landlords
    where landlordId = #{landlordid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hall.Bean.LandlordsExample">
    delete from landlords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hall.Bean.Landlords">
    insert into landlords (landlordId, nickname, avatar, 
      balance, phoneNumber)
    values (#{landlordid,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DOUBLE}, #{phonenumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hall.Bean.Landlords" keyProperty="landlordid" keyColumn="landlordId" useGeneratedKeys="true">
    insert into landlords
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="landlordid != null">
        landlordId,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="landlordid != null">
        #{landlordid,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hall.Bean.LandlordsExample" resultType="java.lang.Long">
    select count(*) from landlords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update landlords
    <set>
      <if test="record.landlordid != null">
        landlordId = #{record.landlordid,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update landlords
    set landlordId = #{record.landlordid,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DOUBLE},
      phoneNumber = #{record.phonenumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hall.Bean.Landlords">
    update landlords
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
    </set>
    where landlordId = #{landlordid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hall.Bean.Landlords">
    update landlords
    set nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DOUBLE},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR}
    where landlordId = #{landlordid,jdbcType=INTEGER}
  </update>

  <select id="getLandlordTel" parameterType="java.lang.Integer" resultType="java.lang.String">
    select phoneNumber from landlords where landlordId=#{id}
  </select>

  <select id="getBrief" parameterType="java.lang.Integer" resultType="com.hall.Bean.Landlords">
    select nickname,avatar from landlords where landlordId=#{id}
  </select>

  <update id="reduceBalance" parameterType="map">
    update landlords set balance=balance-#{amount} where landlordId=#{lid}
  </update>
  <update id="addBalance" parameterType="map">
    update landlords set balance=balance+#{amount} where landlordId=#{lid}
  </update>
  <select id="getAllHouseId" resultType="java.lang.Integer">
    select landlordId from landlords
  </select>

</mapper>