<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hall.DAO.HouseLocationMapper">
  <resultMap id="BaseResultMap" type="com.hall.Bean.HouseLocation">
    <id column="locationId" jdbcType="INTEGER" property="locationid" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="houseId" jdbcType="INTEGER" property="houseid" />
    <result column="regeocodingAddress" jdbcType="VARCHAR" property="regeocodingaddress" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="county" jdbcType="VARCHAR" property="county" />
    <result column="town" jdbcType="VARCHAR" property="town" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    locationId, location, houseId, regeocodingAddress, province, city, county, town, 
    longitude, latitude
  </sql>
  <select id="selectByExample" parameterType="com.hall.Bean.HouseLocationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house_location
    where locationId = #{locationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from house_location
    where locationId = #{locationid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hall.Bean.HouseLocationExample">
    delete from house_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hall.Bean.HouseLocation">
    insert into house_location (locationId, location, houseId, 
      regeocodingAddress, province, city, 
      county, town, longitude, 
      latitude)
    values (#{locationid,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, #{houseid,jdbcType=INTEGER}, 
      #{regeocodingaddress,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{county,jdbcType=VARCHAR}, #{town,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.hall.Bean.HouseLocation">
    insert into house_location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="locationid != null">
        locationId,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="houseid != null">
        houseId,
      </if>
      <if test="regeocodingaddress != null">
        regeocodingAddress,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="town != null">
        town,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="locationid != null">
        #{locationid,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="houseid != null">
        #{houseid,jdbcType=INTEGER},
      </if>
      <if test="regeocodingaddress != null">
        #{regeocodingaddress,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="town != null">
        #{town,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hall.Bean.HouseLocationExample" resultType="java.lang.Long">
    select count(*) from house_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update house_location
    <set>
      <if test="record.locationid != null">
        locationId = #{record.locationid,jdbcType=INTEGER},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.houseid != null">
        houseId = #{record.houseid,jdbcType=INTEGER},
      </if>
      <if test="record.regeocodingaddress != null">
        regeocodingAddress = #{record.regeocodingaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.county != null">
        county = #{record.county,jdbcType=VARCHAR},
      </if>
      <if test="record.town != null">
        town = #{record.town,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house_location
    set locationId = #{record.locationid,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      houseId = #{record.houseid,jdbcType=INTEGER},
      regeocodingAddress = #{record.regeocodingaddress,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      county = #{record.county,jdbcType=VARCHAR},
      town = #{record.town,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hall.Bean.HouseLocation">
    update house_location
    <set>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="houseid != null">
        houseId = #{houseid,jdbcType=INTEGER},
      </if>
      <if test="regeocodingaddress != null">
        regeocodingAddress = #{regeocodingaddress,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="town != null">
        town = #{town,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
    </set>
    where locationId = #{locationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hall.Bean.HouseLocation">
    update house_location
    set location = #{location,jdbcType=VARCHAR},
      houseId = #{houseid,jdbcType=INTEGER},
      regeocodingAddress = #{regeocodingaddress,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      town = #{town,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE}
    where locationId = #{locationid,jdbcType=INTEGER}
  </update>
  <select id="gethouseidsByLocation" parameterType="java.lang.Double" resultType="java.lang.Integer">
    SELECT houseId
    FROM house_location
    WHERE ST_Distance_Sphere(POINT(longitude, latitude), POINT(#{longitude}, #{latitude}))&lt;= #{distance}
  </select>
</mapper>